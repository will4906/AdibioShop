<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2017. willshuhua.
  -->

<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.willshuhua.adibioshop.dao.OrderDao">

    <insert id="createOrder" parameterType="com.willshuhua.adibioshop.entity.order.Order">
        INSERT INTO orders(order_id, customer_id, price, status, description)
        VALUES (#{order_id}, #{customer_id}, #{price}, #{status}, #{description})
    </insert>

    <insert id="createOrderInfo" parameterType="com.willshuhua.adibioshop.entity.order.OrderInfo">
        INSERT INTO 
        order_infos(order_itemid, order_infoid, product_id, patient_infoid)
        VALUES 
        (#{order_itemid}, #{order_infoid}, #{product_id}, #{patient_infoid})
    </insert>

    <insert id="createOrderEvent" parameterType="com.willshuhua.adibioshop.entity.order.OrderEvent">
        INSERT INTO order_events(order_eventid, order_id, event_time, event_title, event_executor, description)
        VALUES (#{order_eventid}, #{order_id}, #{event_time}, #{event_title}, #{event_executor}, #{description})
    </insert>

    <insert id="createOrderItem" parameterType="com.willshuhua.adibioshop.entity.order.OrderItem">
        INSERT INTO order_items(order_id, order_itemid, product_id, quantity)
        VALUES (#{order_id}, #{order_itemid}, #{product_id}, #{quantity})
    </insert>

    <insert id="createOrderPatientInfo">
        INSERT INTO order_patient_infos(order_patient_infoid, order_infoid, name, gender, age, country, province, city, district, address, phone, has_diabetic, is_pregnant, height, weight)
                VALUES (#{order_patient_infoid}, #{order_infoid}, #{name}, #{gender}, #{age}, #{country}, #{province}, #{city}, #{district}, #{address}, #{phone}, #{has_diabetic}, #{is_pregnant}, #{height}, #{weight})
    </insert>
    <update id="updateOrderStatus" >
        UPDATE orders SET status = #{status} WHERE order_id = #{orderId}
    </update>

    <select id="queryOrderInfoByOrderId" resultType="java.util.Map">
        SELECT
        orders.order_id, orders.price, orders.status, orders.description,
        products.product_name,
        order_items.order_itemid, order_items.product_id, order_items.quantity,
        oi.order_infoid
        FROM
        orders, order_items, order_infos AS oi, products
        WHERE
        orders.order_id = #{orderId}
        AND
        orders.order_id = order_items.order_id
        AND
        order_items.order_itemid = oi.order_itemid
        AND
        order_items.product_id = oi.product_id
        AND
        products.product_id = oi.product_id
    </select>

    <select id="getOrderPreviews" resultType="OrderPreview">
        SELECT order_items.order_itemid, order_items.product_id, order_items.quantity, products.product_name
        FROM order_items, products
        WHERE
            order_items.order_id = #{order_id}
        AND
            products.product_id = order_items.product_id
    </select>

    <select id="getTopServeralOrdersAll" resultType="MyOrder">
        SELECT
            orders.row_id, orders.order_id, orders.customer_id, orders.price, orders.status, orders.description, order_events.event_time AS create_time
        FROM
            orders, order_events
        WHERE
            customer_id = #{customer_id}
            AND
                order_events.order_id = orders.order_id
            AND
                order_events.event_title = 'CREATION'
        ORDER BY
            row_id
        DESC
        LIMIT #{limit}
    </select>

    <select id="getTimeToCanceledOrders" resultType="OrderEvent">
        SELECT order_events.order_eventid, order_events.order_id, order_events.event_title, order_events.event_time
        FROM orders, order_events
        WHERE
            orders.status = 'CREATION'
            AND orders.customer_id = #{customer_id}
            AND order_events.order_id = orders.order_id
            AND now() - INTERVAL '15 minutes' > order_events.event_time
    </select>

    <select id="getTopServeralOrdersByStatus" resultType="MyOrder">
        SELECT
            orders.row_id, orders.order_id, orders.customer_id, orders.price, orders.status, orders.description, order_events.event_time AS create_time
        FROM
            orders, order_events
        WHERE
            customer_id = #{customer_id}
            AND
            orders.status = #{status}
            AND
            order_events.order_id = orders.order_id
            AND
            order_events.event_title = 'CREATION'
        ORDER BY
            row_id
        DESC
        LIMIT #{limit}
    </select>

    <select id="getTopServeralOrdersProcessing" resultType="MyOrder">
        SELECT
            orders.row_id, orders.order_id, orders.customer_id, orders.price, orders.status, orders.description, order_events.event_time AS create_time
        FROM
            orders, order_events
        WHERE
            customer_id = #{customer_id}
            AND
            orders.status != 'CREATION'
            AND
            orders.status != 'CANCELED'
            AND
            order_events.order_id = orders.order_id
            AND
            order_events.event_title = 'CREATION'
        ORDER BY
            row_id
        DESC
        LIMIT #{limit}
    </select>

    <select id="getPartServeralOrdersAll" resultType="MyOrder">
        SELECT
            orders.row_id, orders.order_id, orders.customer_id, orders.price, orders.status, orders.description, order_events.event_time AS create_time
        FROM
            orders, order_events
        WHERE
            customer_id = #{customer_id}
            AND
            order_events.order_id = orders.order_id
            AND
            order_events.event_title = 'CREATION'
            AND
            orders.row_id <![CDATA[ < ]]> #{row_id}
        ORDER BY
            orders.row_id
        DESC
        LIMIT #{limit}
    </select>

    <select id="getPartServeralOrdersByStatus" resultType="MyOrder">
        SELECT
            orders.row_id, orders.order_id, orders.customer_id, orders.price, orders.status, orders.description, order_events.event_time AS create_time
        FROM
            orders, order_events
        WHERE
            customer_id = #{customer_id}
            AND
            orders.status = #{status}
            AND
            order_events.order_id = orders.order_id
            AND
            order_events.event_title = 'CREATION'
            AND
            orders.row_id <![CDATA[ < ]]> #{row_id}
        ORDER BY
            orders.row_id
        DESC
        LIMIT #{limit}
    </select>

    <select id="getPartServeralOrdersProcessing" resultType="MyOrder">
        SELECT
            orders.row_id, orders.order_id, orders.customer_id, orders.price, orders.status, orders.description, order_events.event_time AS create_time
        FROM
            orders, order_events
        WHERE
            customer_id = #{customer_id}
            AND
            orders.status != 'CREATION'
            AND
            orders.status != 'CANCELED'
            AND
            order_events.order_id = orders.order_id
            AND
            order_events.event_title = 'CREATION'
            AND
            orders.row_id <![CDATA[ < ]]> #{row_id}
        ORDER BY
            orders.row_id
        DESC
        LIMIT #{limit}
    </select>

    <select id="getOrderByOrderId" resultType="Order">
        SELECT order_id, customer_id, price, status, description FROM orders WHERE order_id = #{order_id}
    </select>

    <select id="getOrderEventList" resultType="OrderEvent">
        SELECT
            order_eventid, order_id, event_time, event_title, event_executor, description
        FROM
            order_events
        WHERE
            order_id = #{order_id}
        ORDER BY row_id DESC
    </select>

    <select id="getItemMapList" resultType="java.util.Map">
        SELECT order_items.order_id, order_items.order_itemid, order_items.product_id, products.product_name, products.unit_price, order_items.quantity
        FROM
            order_items, products
        WHERE
            order_items.order_id = #{order_id}
        AND
                products.product_id = order_items.product_id
    </select>

    <select id="getOrderInfoDetailList" resultType="java.util.Map">
        SELECT order_infos.order_itemid, order_infos.order_infoid, order_infos.product_id, order_infos.patient_infoid,
            order_patient_infos.name, order_patient_infos.age, order_patient_infos.gender
        FROM
            order_infos, order_patient_infos
        WHERE
            order_infos.order_itemid = #{order_itemid}
        AND
            order_patient_infos.order_infoid = order_infos.order_infoid
    </select>

    <select id="getCustomerOrder" resultType="Order">
        SELECT
            order_id, customer_id, price, status, description
        FROM
            orders
        WHERE
            order_id = #{order_id}
            AND
            customer_id = #{customer_id}
    </select>

    <select id="selectOrderInfo" resultType="OrderInfo">
        SELECT order_itemid, order_infoid, product_id, patient_infoid FROM order_infos WHERE order_infoid = #{order_infoid}
    </select>

    <select id="selectCustomerByOrderInfo" resultType="Customer">
        SELECT
            customers.customer_id, customers.openid
        FROM
            orders, order_items, order_infos, customers
        WHERE
            order_infos.order_infoid = #{order_infoid}
        AND
            order_items.order_itemid = order_infos.order_itemid
        AND
            orders.order_id = order_items.order_id
        AND
            customers.customer_id = orders.customer_id
    </select>
</mapper>














